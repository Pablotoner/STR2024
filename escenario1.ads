
with Ada.Real_Time; use Ada.Real_Time;
with devicesfss_v1; use devicesfss_v1;

package escenario1 is

    ---------------------------------------------------------------------
    ------ Access time for devices
    ---------------------------------------------------------------------
    WCET_Distance: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    WCET_Light: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    
    WCET_Joystick: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    WCET_PilotPresence: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    WCET_PilotButton: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    
    WCET_Power: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(4);
    
    WCET_Speed: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(7);
    WCET_Altitude: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(18);

    WCET_Pitch: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(20);
    WCET_Roll: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(18);

    WCET_Display: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(15);
    WCET_Alarm: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);

    ---------------------------------------------------------------------
    ------ SCENARIO ----------------------------------------------------- 
    ---------------------------------------------------------------------
    -- Initial_Altitude: Altitude_Samples_Type := 8000;
    
    ---------------------------------------------------------------------
    ------ DISTANCE OK---------------------------------------------------
    cantidad_datos_Distancia: constant := 200;
    type Indice_Secuencia_Distancia is mod cantidad_datos_Distancia;
    type tipo_Secuencia_Distancia is array (Indice_Secuencia_Distancia) of Distance_Samples_Type;

    Distance_Simulation: tipo_Secuencia_Distancia :=  -- next sample every 100ms.
            ( 5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 1s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 2s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 3s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 4s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 5s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 6s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 7s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 8s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 9s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 10s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 11s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 12s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 13s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 14s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 15s. 
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 16s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 17s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 18s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555,   -- 19s.
              5555,5555,5555,5555,5555, 5555,5555,5555,5555,5555);  -- 20s.
                   
    
---------------------------------------------------------------------
    ------ LIGHT OK------------------------------------------------------

    cantidad_datos_Light: constant := 200;
    type Indice_Secuencia_Light is mod cantidad_datos_Light;
    type tipo_Secuencia_Light is array (Indice_Secuencia_Light) of Light_Samples_Type;

    Light_Intensity_Simulation: tipo_Secuencia_Light :=  -- 1 muestra cada 100ms.
                 ( 700,700,700,700,700, 700,700,700,700,700,   -- 1s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 2s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 3s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 4s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 5s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 6s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 7s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 8s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 9s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 10s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 11s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 12s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 13s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 14s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 15s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 16s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 17s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 18s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 19s.
                   700,700,700,700,700, 700,700,700,700,700);  -- 20s.
    ---------------------------------------------------------------------
    ------ JOYSTICK OK---------------------------------------------------

    cantidad_datos_Joystick: constant := 200;
    type Indice_Secuencia_Joystick is mod cantidad_datos_Joystick;
    type tipo_Secuencia_Joystick is array (Indice_Secuencia_Joystick) 
                                             of Joystick_Samples_Type;

    Joystick_Simulation: tipo_Secuencia_Joystick :=  -- 1 muestra cada 100ms.
                ((+00,+03),(+00,+03),(+00,+01),(+00,+00),(+0,-03),  
                 (+01,+03),(-01,+03),(-02,+01),(+03,+00),(+01,-03),  --1s. Normal
 
                 (+01,+03),(+01,+03),(+02,+01),(+03,+00),(+01,-03),  
                 (+01,+03),(-01,+03),(-02,+01),(+03,+00),(+01,-03),  --2s.

                 (+05,+03),(+05,+03),(+05,+01),(+05,+00),(+05,-03),  
                 (+10,+03),(+10,+03),(+10,+01),(+10,+00),(+10,-03),  --3s.

                 (+25,+03),(+25,+03),(+25,+01),(+25,+00),(+25,-03),  
                 (+45,+03),(+45,+03),(+45,+01),(+45,+00),(+45,-03),  --4s. ascenso

                 (+45,+03),(+45,+03),(+45,+01),(+45,+00),(+45,-03),  
                 (+45,+03),(+45,+03),(+45,+01),(+45,+00),(+45,-03),  --5s. ascenso brusco
                  
                 (+47,+05),(+47,+05),(+47,+05),(+45,+05),(+45,+05),  
                 (+47,+05),(+47,+05),(+47,+05),(+46,+05),(+46,+05),  --6s.  ascenso y rotaci√≥n
 
                 (+47,+15),(+47,+15),(+47,+15),(+45,+15),(+45,+15),  
                 (+47,+15),(+47,+15),(+47,+15),(+46,+15),(+46,+15),  --7s. !! ascenso y rotacion 

                 (+47,+25),(+47,+25),(+47,+25),(+45,+25),(+45,+25),  
                 (+45,+25),(+45,+25),(+45,+25),(+45,+25),(+45,+25),  --8s. !! mantiene ascenso brusco

                 (+35,+25),(+35,+25),(+35,+25),(+35,+25),(+35,+25),  
                 (+30,+25),(+30,+25),(+30,+25),(+30,+25),(+30,+25),  --9s. anula el ascenso y sigue rotando

                 (+15,+25),(+15,+25),(+15,+25),(+15,+25),(+15,+25),  
                 (+15,+25),(+15,+25),(+15,+25),(+15,+25),(+15,+25),  --10s.
                 
                 (+10,+25),(+10,+25),(+10,+25),(+10,+25),(+10,+25),  
                 (+10,+25),(+10,+25),(+10,+25),(+10,+25),(+10,+25),  --11s.
 
                 (+05,+25),(+05,+25),(+05,+25),(+05,+25),(+05,+25),  
                 (+05,+25),(+05,+25),(+05,+25),(+05,+25),(+05,+25),  --12s.

                 (+01,+25),(+02,+25),(+02,+25),(+03,+25),(+03,+25),  
                 (+02,+25),(+02,+25),(+01,+25),(+01,+25),(+00,+25),  --13s.

                 (-25,+03),(-25,+03),(-35,+01),(-35,+00),(-35,-03),  
                 (-35,+03),(-35,+03),(-35,+01),(-35,+00),(-35,-03),  --14s. bajada sin rotar

                 (-30,+03),(-30,+03),(-30,+01),(-30,+00),(-30,-03),  
                 (-25,+03),(-25,+03),(-25,+01),(-25,+00),(-25,-03),  --15s.
                  
                 (-35,+10),(-35,+10),(-35,+10),(-35,+10),(-35,-10),  
                 (-35,+10),(-35,+10),(-35,+10),(-35,+10),(-35,-10),  --16s. con rotacion
 
                 (-30,+20),(-30,+20),(-30,+20),(-30,+20),(-30,+20),  
                 (-30,+20),(-30,+20),(-30,+20),(-30,+20),(-30,+20),  --17s.

                 (-20,+20),(-20,+20),(-20,+20),(-20,+20),(-20,+20),  
                 (-20,+20),(-20,+20),(-20,+20),(-20,+20),(-20,+20),  --18s.

                 (-10,+10),(-10,+10),(-10,+15),(-10,+15),(-10,+15),  
                 (-10,+10),(-10,+10),(-10,+20),(-10,+10),(-10,+10),  --19s.

                 (-00,+00),(-01,+01),(-01,+01),(-02,+03),(-02,+03),  
                 (-00,+0),(-00,+02),(-03,+02),(-03,+02),(-02,+02),  --20s.
                 
    ---------------------------------------------------------------------
    ------ POWER OK------------------------------------------------------
    cantidad_datos_Power: constant := 200;
    type Indice_Secuencia_Power is mod cantidad_datos_Power;
    type tipo_Secuencia_Power is array (Indice_Secuencia_Power) of Power_Samples_Type;

    Power_Simulation: tipo_Secuencia_Power :=  -- next sample every 100ms.
                 ( 100,100,100,100,100, 100,100,100,100,100,   -- 1s. muy baja
                   200,200,200,200,200, 200,200,200,200,200,   -- 2s.
                   400,400,400,400,400, 450,450,450,450,450,   -- 3s.
                   400,400,400,400,400, 450,450,450,450,450,   -- 4s.  acelerando 
                   500,500,500,500,500, 500,500,500,500,500,   -- 5s.
                   600,600,600,600,600, 600,600,600,600,600,   -- 6s.   
                   900,900,900,900,900, 900,900,900,900,900,   -- 7s. alta
                   900,900,900,900,900, 900,900,900,900,900, -- 8s.
                   1200,1200,1200,1200,1200, 1200,1200,1200,1220,1200, -- 9s.demasiado
                   1020,1020,1020,1020,1020, 1020,1020,1020,1020,1020, -- 10s.
                   900,900,900,900,900, 900,900,900,900,900,   -- 11s.
                   900,900,900,900,900, 900,900,900,900,900,   -- 12s.
                   1200,1200,1200,1200,1200, 1200,1200,1200,1220,1200,-- 13s. otra vez
                   800,800,800,800,800, 800,800,800,800,800,   -- 14s.
                   800,800,800,800,800, 800,800,800,800,800,   -- 15s.
                   600,600,600,600,600, 600,600,600,600,600,   -- 16s. frenando
                   400,400,400,400,400, 450,450,450,450,450,   -- 17s.
                   400,400,400,400,400, 450,450,450,450,450,   -- 18s.
                   110,110,110,110,103, 103,103,100,100,100,   -- 19s.  muy baja otra vez
                   200,200,200,200,200, 200,200,200,200,200, ); -- 20s.


    ---------------------------------------------------------------------
    ------ PILOT'S PRESENCE ---------------------------------------------

    cantidad_datos_PilotPresence: constant := 200;
    type Indice_Secuencia_PilotPresence is mod cantidad_datos_PilotPresence;
    type tipo_Secuencia_PilotPresence is array (Indice_Secuencia_PilotPresence) of PilotPresence_Samples_Type;

    PilotPresence_Simulation: tipo_Secuencia_PilotPresence :=  -- 1 muestra cada 100ms.
                 ( 1,1,1,1,1, 1,1,1,1,1,   -- 1s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 2s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 3s.
                   1,1,1,1,1, 1,1,0,1,0,   -- 4s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 5s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 6s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 7s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 8s. 
                   1,1,0,0,1, 1,1,1,1,1,   -- 9s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 10s.
                   1,1,1,0,1, 1,1,1,1,1,   -- 11s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 12s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 13s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 14s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 15s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 16s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 17s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 18s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 19s.
                   1,1,1,1,1, 1,1,1,1,1);  -- 20s.                   
    ---------------------------------------------------------------------
    ------ PILOT'S BUTTON -----------------------------------------------

    cantidad_datos_PilotButton: constant := 200;
    type Indice_Secuencia_PilotButton is mod cantidad_datos_PilotButton;
    type tipo_Secuencia_PilotButton is array (Indice_Secuencia_PilotButton) of PilotButton_Samples_Type;

    PilotButton_Simulation: tipo_Secuencia_PilotButton :=  -- 1 muestra cada 100ms.
                 ( 0,0,0,0,0, 0,0,0,0,0,   -- 1s. 
                   0,0,0,0,0, 1,1,1,0,0,   -- 2s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 3s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 4s. 
                   1,1,1,1,0, 0,0,0,0,0,   -- 5s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 6s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 7s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 8s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 9s.
                   0,0,0,0,0, 0,0,0,0,0,  -- 10s.                   
                   0,0,0,0,0, 0,0,0,0,0,   -- 11s. 
                   0,0,0,0,0, 1,1,1,1,1,   -- 12s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 13s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 14s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 15s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 16s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 17s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 18s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 19s.
                   0,0,0,0,0, 0,0,0,0,0);  -- 20s.
end escenario1;
